@model Post

@using System.Security.Claims
<style>
    .truncate-text-container {
        max-height: 500px;
    }

    .truncate-text {
        -webkit-box-orient: vertical;
        display: -webkit-box;
        -webkit-line-clamp: 10;
        overflow: hidden;
        white-space: pre-line;
    }
</style>

@{
    var userId = Guid.Parse(User.FindFirstValue(ClaimTypes.NameIdentifier));
}
<div class="card mt-2">
    <div class="card-body">
        <div class="d-flex justify-content-between align-self-center">
            <h5>
                <a href="#">@Model.User.FullName</a>
            </h5>
            @if (userId == Model.UserId)
            {
                <div class="btn-group">
                    <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        More
                    </button>
                    <div class="dropdown-menu" aria-labelledby="dropdownMenu2">
                        <a class="dropdown-item" asp-page="Posts/Edit" asp-route-id="@Model.Id">Edit</a>
                        <a class="dropdown-item">Delete</a>
                    </div>
                </div>
            }
        </div>
        <p class="card-subtitle text-muted">@Model.UpdatedOn</p>

        <div class="truncate-text-container">
            <p class="truncate-text card-text">@Model.Content</p>
        </div>

        <div class="card-text mb-1">
            @if (Model.LikeSet.Count > 1)
            {
                <span class="badge badge-pill badge-primary">@Model.Likes.Count Likes</span>
            }
        </div>

        @{
            var liked = Model.LikeSet.Contains(userId);
            var cssClass = liked ? "js-liked" : "js-not-liked";
            var label = liked ? "Unlike" : "Like";
        }
     
        <button type="button" class="btn btn-light btn-block @cssClass" data-post-id="@Model.Id">@label</button>
    </div>
</div>
