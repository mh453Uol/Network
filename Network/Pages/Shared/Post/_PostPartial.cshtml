@model Post
@using Util

@{
    var userId = User.GetUserId();
}
<div class="card mt-2">
    <div class="card-body">
        <div class="d-flex justify-content-between align-self-center">
            <h5>
                <a asp-page="Profile" asp-route-id="@Model.User.Id">@Model.User.FullName</a>
            </h5>
            @if (userId == Model.UserId)
            {
                <div class="btn-group">
                    <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        More
                    </button>
                    <div class="dropdown-menu" aria-labelledby="dropdownMenu2">
                        <a class="dropdown-item" asp-page="Posts/Edit" asp-route-id="@Model.Id">Edit</a>
                        <a class="dropdown-item">Delete</a>
                    </div>
                </div>
            }
        </div>
        <p class="card-subtitle text-muted">@Model.UpdatedOn</p>

        <div class="truncate-text-container">
            <p class="truncate-text card-text">@Model.Content</p>
        </div>

        <div class="card-text mb-2">
            <span class="badge badge-pill badge-primary js-like-count" data-like-count="@Model.LikeSet.Count" data-post-id="@Model.Id">@Model.LikeSet.Count @(Model.LikeSet.Count == 1 ? "Like" : "Likes")</span>
        </div>

        @if (userId.HasValue)
        {

            var liked = Model.LikeSet.Contains(userId.Value);
            var cssClass = liked ? "btn-primary" : "btn-light";
            var label = liked ? "Liked" : "Like";

            <button type="button" class="js-like btn @cssClass btn-block" data-liked="@liked" data-post-id="@Model.Id">@label</button>
        }
    </div>
</div>
