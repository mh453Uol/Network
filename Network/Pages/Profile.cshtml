@page "{id:guid}"
@model Network.Pages.ProfileModel
@{
    ViewData["Title"] = Model.ProfileUser.FullName;
}
<h2 class="mb-3">@Model.ProfileUser.FullName</h2>

@if (Model.IsFollowUserButtonVisible)
{
    <div class="mt-3 mb-3">
        @{
            var label = Model.IsFollowingUser ? "Following" : "Follow";
            var cssClass = Model.IsFollowingUser ? "btn-primary" : "btn-light";
        }
        <button type="button" class="js-follow-button btn @cssClass btn-block" data-following="@Model.IsFollowingUser" data-user-id="@Model.ProfileUser.Id">
            @label
        </button>
    </div>
}

@{
    var postTabVisible = Model.IsTabVisible("posts");
    var followersTabVisible = Model.IsTabVisible("followers");
    var followingTabVisible = Model.IsTabVisible("following");
}
<ul class="nav nav-tabs">
    <li class="nav-item">
        <a class="nav-link @(postTabVisible ? "active": "")" asp-page="profile" asp-route-tab="posts" role="tab">Posts</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(followersTabVisible ? "active": "")" asp-page="profile" asp-route-tab="followers" role="tab">
            Followers
            <span class="badge badge-info badge-pill js-followers-count">@Model.FollowerCount</span>
        </a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(followingTabVisible ? "active": "")" asp-page="profile" asp-route-tab="following" role="tab">
            Following
            <span class="badge badge-info badge-pill">@Model.FollowingCount</span>
        </a>
    </li>
</ul>
<div class="tab-content" id="myTabContent">
    @if (postTabVisible)
    {
        <div>
            @await Component.InvokeAsync("PaginatedPosts", new { 
                pageIndex = Model.PageIndex,
                pageSize = Model.PageSize, 
                userId = Model.ProfileUser.Id 
            })
        </div>
    }

    @if (followersTabVisible)
    {
        <div>
            @await Component.InvokeAsync("PaginatedFollowers", new {
               pageIndex = Model.PageIndex,
               pageSize = Model.PageSize,
               userId = Model.ProfileUser.Id,
               totalCount = Model.FollowerCount
            })
        </div>
    }

    @if (followingTabVisible)
    {
        <div>
            @await Component.InvokeAsync("PaginatedFollowing", new {
               pageIndex = Model.PageIndex,
               pageSize = Model.PageSize,
               userId = Model.ProfileUser.Id,
               totalCount = Model.FollowingCount
            })
        </div>
    }

</div>






